<launch>

  <!-- RealSense camera nodes -->
  <include file="$(find realsense_camera)/launch/r200_nodelet_rgbd.launch" />

  <!-- Static transform to link base to camera; TODO replace this with URDF mods -->
  <node name="base2camera" pkg="tf" type="static_transform_publisher" args="-0.005 0 0.165 0 0 0 base_link camera_link 100" />

  <!-- VoxelGrid filter to clean NaNs, clip and downsample -->
  <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid camera/camera_nodelet_manager" output="screen">
    <remap from="~input" to="/camera/depth/points" />
    <rosparam>
      filter_field_name: y    # Suffix frame per http://www.ros.org/reps/rep-0103.html {x right, y down, z forward}
      filter_limit_min: -0.15 # -0.21 for desk harness, -0.15 for robot (30cm total height)
      filter_limit_max: 0.15  # 0.09 for desk harness, 0.15 for robot
      leaf_size: 0.03         # Downsample (huge speedup); 0.01 is fine, but slow; 0.05 misses obstacles
      filter_limit_negative: false
    </rosparam>
  </node>

  <!-- RadiusOutlierRemoval filter to remove outliers -->
  <node pkg="nodelet" type="nodelet" name="radius_outlier_removal" args="load pcl/RadiusOutlierRemoval camera/camera_nodelet_manager" output="screen">
    <remap from="~input" to="/voxel_grid/output" />
    <rosparam>
      radius_search: 0.10 # Must have min_neighbors w/in this radius to survive
      min_neighbors: 5
    </rosparam>
  </node>

  <!-- Convert to laserscan -->
  <node pkg="nodelet" type="nodelet" name="pointcloud_to_laserscan" args="load pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet camera/camera_nodelet_manager" output="screen">
    <remap from="/camera/cloud_in" to="/radius_outlier_removal/output" />
    <remap from="/camera/scan" to="/scan" />
    <rosparam>
      target_frame: camera_link   # Transform from {x right, y down, z forward} to {x forward, y left, z up}
      max_height: 0.15            # -VoxelGrid.filter_limit_min
      min_height: -0.15           # -VoxelGrid.filter_limit_max

      # Pulled from scans generated by depthimage_to_laserscan
      angle_min: -0.463766
      angle_max: 0.516538
      angle_increment: 0.001534122

      scan_time: 0
      range_min: 0.45
      range_max: 10.0
    </rosparam>
  </node>

  <!-- Launch base controller -->
  <node name="driver" pkg="ca_driver" type="ca_driver" output="screen">
    <rosparam>
      loop_hz: 30
      dev: "/dev/ttyUSB0"
      publish_tf: true
      create_1: false
    </rosparam>
  </node>

  <!-- Load robot description -->
  <include file="$(find ca_description)/launch/create_2.launch" />

  <!-- Monitor the battery -->
  <node name="batteryMon" pkg="rodeobot" type="battery_monitor" output="screen" />

  <!-- W3 -->
  <node name="w3" pkg="rodeobot" type="w3_node" output="screen">
    <rosparam>
      x_min_vel: 0.2
      x_max_vel: 0.6
      x_accel: 1.0
      r_min_vel: 0.2
      r_max_vel: 3.0
      r_accel: 2.0
      r_epsilon: 0.05
      scan_width: 0.5 # Min width opening on horizon to move forward
      scan_horizon: 1.1 # Any scan values > this are clipped to this; also Nan and Inf
    </rosparam>
  </node>

</launch>
